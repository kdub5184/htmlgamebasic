const canvas=document.querySelector("canvas");canvas.oncontextmenu=function(t){t.preventDefault(),t.stopPropagation()};const c=canvas.getContext("2d");canvas.width=innerWidth,canvas.height=innerHeight;const scoreL=document.querySelector("#scoreL"),startGameBtn=document.querySelector("#startGameBtn"),startModal=document.querySelector("#startModal"),bigScore=document.querySelector("#bigScore");class Player{constructor(t,a,i,e){this.x=t,this.y=a,this.radius=i,this.color=e}draw(){c.beginPath(),c.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),c.fillStyle=this.color,c.fill()}}class Projectiles{constructor(t,a,i,e,s){this.x=t,this.y=a,this.radius=i,this.color=e,this.velocity=s}draw(){c.beginPath(),c.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),c.fillStyle=this.color,c.fill()}update(){this.draw(),this.x+=this.velocity.x,this.y+=this.velocity.y}}class Enemy{constructor(t,a,i,e,s){this.radius=i,this.x=t,this.y=a,this.color=e,this.velocity=s}draw(){c.beginPath(),c.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),c.fillStyle=this.color,c.fill()}update(){this.draw(),this.x+=this.velocity.x,this.y+=this.velocity.y}}const friction=.988;class Particle{constructor(t,a,i,e,s){this.radius=i,this.x=t,this.y=a,this.color=e,this.velocity=s,this.alpha=1}draw(){c.save(),c.globalAlpha=this.alpha,c.beginPath(),c.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),c.fillStyle=this.color,c.fill(),c.restore()}update(){this.draw(),this.velocity.x*=.988,this.velocity.y*=.988,this.x+=this.velocity.x,this.y+=this.velocity.y,this.alpha-=.01}}const canvasx=canvas.width/2,canvasy=canvas.height/2;let animationId,player=new Player(canvasx,canvasy,15,"white"),projectiles=[],enemies=[],particles=[],score=0;function init(){player=new Player(canvasx,canvasy,15,"white"),projectiles=[],enemies=[],particles=[],score=0,scoreL.innerHTML=score}function spawnEnenies(){setInterval((()=>{let t,a;this.radius=30*Math.random()+7,Math.random()>.5?(t=Math.random()<.5?0-this.radius:canvas.width+this.radius,a=Math.random()*canvas.height):(t=Math.random()*canvas.width,a=Math.random()<.5?0-this.radius:canvas.height+this.radius);const i="hsl("+360*Math.random()+", 100%, 50%, 1)",e=Math.atan2(canvasy-a,canvasx-t),s={x:Math.cos(e),y:Math.sin(e)};enemies.push(new Enemy(t,a,this.radius,i,s))}),1100)}function animate(){animationId=requestAnimationFrame(animate),c.fillStyle="rgba(0, 0, 0, 0.09)",c.fillRect(0,0,canvas.width,canvas.height),player.draw(),particles.forEach((t=>{t.alpha<=0&&particles.splice(particles.indexOf(t),1),t.update()})),projectiles.forEach((t=>{t.update(),(t.x<0||t.x>canvas.width||t.y<0||t.y>canvas.height)&&projectiles.splice(projectiles.indexOf(t),1)})),enemies.forEach((t=>{t.update()})),enemies.forEach((t=>{projectiles.forEach((a=>{if(Math.sqrt(Math.pow(t.x-a.x,2)+Math.pow(t.y-a.y,2))<t.radius+a.radius){score+=100,scoreL.innerHTML=score;for(let i=0;i<t.radius;i++)particles.push(new Particle(a.x,a.y,3*Math.random()+1,t.color,{x:(Math.random()-.5)*(6*Math.random()),y:(Math.random()-.5)*(6*Math.random())}));t.radius-10>10?(projectiles.splice(projectiles.indexOf(a),1),gsap.to(t,{radius:t.radius-10}),t.radius<7&&enemies.splice(enemies.indexOf(t),1)):(enemies.splice(enemies.indexOf(t),1),projectiles.splice(projectiles.indexOf(a),1))}}))})),enemies.forEach((t=>{Math.sqrt(Math.pow(t.x-player.x,2)+Math.pow(t.y-player.y,2))<t.radius+player.radius&&(cancelAnimationFrame(animationId),startModal.style.display="flex",bigScore.innerHTML=score)}))}window.addEventListener("click",(t=>{const a=t.clientX,i=t.clientY,e=Math.atan2(i-canvasy,a-canvasx),s={x:5.2*Math.cos(e),y:5.2*Math.sin(e)};projectiles.push(new Projectiles(canvasx,canvasy,5,"white",s)),console.log("projectile"+projectiles.length)})),startGameBtn.addEventListener("click",(()=>{init(),animate(),spawnEnenies(),startModal.style.display="none"}));